<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jee="http://www.springframework.org/schema/jee" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
        http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
       
  <tx:annotation-driven />
  
  <context:component-scan base-package="com" />
  
  <bean id="wcJndiTemplate" class="org.springframework.jndi.JndiTemplate">
    <property name="environment">
        <props>
            <prop key="java.naming.factory.initial">org.jnp.interfaces.NamingContextFactory</prop>
            <prop key="java.naming.provider.url">jnp://mpoojari:5400</prop>
            <prop key="java.naming.factory.url.pkgs">org.apache.naming</prop>
<!--             <prop key="jnp.disableDiscovery">true</prop> -->
        </props>
    </property>
</bean>

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
	    <property name="jndiName" value="jdbc_EDM"/>
	    <property name="resourceRef" value="false"/>
	    <property name="jndiTemplate" ref="wcJndiTemplate" />
	</bean>

	<bean id="transactionManagerBitronix" class="org.springframework.jndi.JndiObjectFactoryBean">
	    <property name="jndiName" value="UserTransaction"/>
	    <property name="resourceRef" value="false"/>
	    <property name="jndiTemplate" ref="wcJndiTemplate" />
	</bean>

 	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="transactionManagerBitronix" />
        <property name="userTransaction" ref="transactionManagerBitronix" />
        <property name="allowCustomIsolationLevels" value="true" />
    </bean>

 	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="EDMPersistenceUnit" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter"> 
	       <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"> 
	           <!-- <property name="databasePlatform" value="org.hibernate.dialect.MySQL5Dialect" /> -->
	           <property name="databasePlatform" value="org.hibernate.dialect.OracleDialect" />
	           <!-- <property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" /> -->
 
	           <property name="showSql" value="true" /> 
	           <property name="generateDdl" value="true" />
	       </bean> 
		</property>
		<property name="jpaProperties">
			<props>
			<prop key="javax.persistence.transactionType">jta</prop>
<!-- 			<prop key="hibernate.transaction.factory_class">com.common.tomcat.bitronix.GSJTATransactionFactory</prop> -->
			<!--  prop key="hibernate.transaction.manager_lookup_class">org.hibernate.transaction.JOTMTransactionManagerLookup</prop--> 
			<prop key="hibernate.transaction.manager_lookup_class">com.common.tomcat.bitronix.BTMTransactionManagerLookup</prop>
			 <prop key="jta.UserTransaction">UserTransaction</prop>
			<prop key="hibernate.transaction.flush_before_completion">true</prop>
	        <prop key="hibernate.current_session_context_class">org.hibernate.context.JTASessionContext</prop>
	         <prop key="hibernate.connection.release_mode">after_statement</prop>
			</props>
		</property>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
		</property>
	</bean>
 
 
  
 	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
<!--     <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" /> -->
    
    
	<bean id="schedulerProperties"
      class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	  <property name="locations">
	    <list>
	      <value>classpath*:schedulerFactory.properties</value>
	    </list>
	  </property>
	</bean>
	
	<bean id="dataLoaderConnection"
      class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	  <property name="locations">
	    <list>
	      <value>classpath*:dataLoaderConnection.properties</value>
	    </list>
	  </property>
	</bean>
	
	<bean id="testProperties"
      class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	  <property name="locations">
	    <list>
	      <value>classpath*:test.properties</value>
	    </list>
	  </property>
	</bean>

	
	<bean id="schedulerFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
       <property name="quartzProperties">
        <props>
            <prop key="org.quartz.scheduler.instanceName">FileLoadWeb</prop>
            
            <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
            <prop key="org.quartz.threadPool.threadCount">40</prop>
            <prop key="org.quartz.threadPool.threadPriority">5</prop>
            <prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
            <prop key="org.quartz.jobStore.class">org.springframework.scheduling.quartz.LocalDataSourceJobStore</prop>
            <prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</prop>
            <prop key="org.quartz.jobStore.tablePrefix">QUARTZ_FL_</prop>
            <prop key="org.quartz.jobStore.isClustered">true</prop>
            <!--  <<prop key="org.quartz.jobStore.dontSetAutoCommitFalse">false</prop>
            <prop key="org.quartz.scheduler.wrapJobExecutionInUserTransaction">true</prop>-->
        </props>
    </property>
    </bean>
	
    
</beans>

